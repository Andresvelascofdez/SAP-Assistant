# ====================================================================
# ESTRUCTURA RECOMENDADA PARA ORGANIZAR CONOCIMIENTO SAP IS-U
# ====================================================================

knowledge_structure = {
    "üìä MASTER_DATA": {
        "description": "Documentaci√≥n de tablas principales",
        "examples": [
            "BUT000 - Business Partner",
            "EVER - Instalaciones y contratos", 
            "EABL - Documentos de facturaci√≥n",
            "EABLG - Lecturas de aparatos",
            "EUITRANS - Puntos de suministro",
            "EANLH - Historial de aparatos",
            "ERCH - Cabeceras de factura",
            "DFKKOP - Partidas abiertas FI-CA"
        ],
        "scope": "STANDARD",
        "format": """
        Tabla: [NOMBRE] - [Descripci√≥n corta]
        ===================================
        
        Descripci√≥n: [Prop√≥sito de la tabla]
        
        Campos principales:
        - CAMPO1: Descripci√≥n
        - CAMPO2: Descripci√≥n
        
        Relaciones:
        - TABLA_REL: Via campo X
        
        T-codes relacionadas:
        - TX01: Descripci√≥n
        
        Validaciones:
        - Regla 1
        - Regla 2
        
        Errores comunes:
        - Error: Soluci√≥n
        """
    },
    
    "üîß TRANSACTIONS": {
        "description": "T-codes y transacciones",
        "examples": [
            "EC85 - Facturaci√≥n manual",
            "ES21 - Alta de instalaci√≥n",
            "ES31 - Cuentas contractuales",
            "EL31 - Gesti√≥n de aparatos",
            "BP - Business Partner",
            "FPL9 - Plan de pagos"
        ],
        "scope": "STANDARD", 
        "format": """
        T-code: [CODIGO] - [Descripci√≥n]
        ===============================
        
        Prop√≥sito: [Para qu√© sirve]
        M√≥dulo: [IS-U √°rea]
        
        Campos obligatorios:
        - Campo1: Descripci√≥n
        
        Proceso:
        1. Paso 1
        2. Paso 2
        
        Validaciones:
        - Verificaci√≥n 1
        
        Errores frecuentes:
        - Error: Causa y soluci√≥n
        
        Tablas actualizadas:
        - TABLA1: Qu√© actualiza
        """
    },
    
    "üîÑ BUSINESS_PROCESSES": {
        "description": "Procesos de negocio end-to-end",
        "examples": [
            "Move-in (Alta de suministro)",
            "Move-out (Baja de suministro)", 
            "Facturaci√≥n peri√≥dica",
            "Gesti√≥n de lecturas",
            "Proceso de cobranza",
            "Change of supplier"
        ],
        "scope": "STANDARD",
        "format": """
        Proceso: [NOMBRE]
        =================
        
        Objetivo: [Meta del proceso]
        
        FASE 1: [Nombre fase]
        --------------------
        1. Actividad 1
        2. Actividad 2
        
        FASE 2: [Nombre fase]
        --------------------
        1. Actividad 1
        
        Validaciones cr√≠ticas:
        - Validaci√≥n 1
        
        Errores frecuentes:
        - Error: Soluci√≥n
        
        T-codes: [Lista]
        Tablas: [Lista]
        """
    },
    
    "üö® INCIDENT_SOLUTIONS": {
        "description": "Soluciones a incidencias t√©cnicas",
        "examples": [
            "Error BP no v√°lido en ES21",
            "Factura duplicada en EC85",
            "Aparato no encontrado en EL31",
            "Error de lectura en EABLG",
            "Problemas de autorizaci√≥n",
            "Errores de customizing"
        ],
        "scope": "CLIENT_SPECIFIC",  # Pueden ser espec√≠ficas por cliente
        "format": """
        Incidencia: [Descripci√≥n del problema]
        =====================================
        
        S√≠ntoma: [C√≥mo se manifiesta]
        
        Causas posibles:
        1. Causa 1
        2. Causa 2
        
        Diagn√≥stico:
        1. Verificar X
        2. Revisar Y
        
        Soluci√≥n:
        1. Acci√≥n 1
        2. Acci√≥n 2
        
        Prevenci√≥n:
        - Medida preventiva
        
        Severidad: [Alta/Media/Baja]
        T-codes: [Lista]
        Tablas: [Lista]
        """
    },
    
    "‚öôÔ∏è CONFIGURATION": {
        "description": "Customizing y configuraci√≥n",
        "examples": [
            "Configuraci√≥n de tipos de contrato",
            "Setup de aparatos de medici√≥n",
            "Customizing de facturaci√≥n",
            "Configuraci√≥n de Business Partner",
            "Setup de rate determination",
            "Configuraci√≥n de FI-CA"
        ],
        "scope": "CLIENT_SPECIFIC",
        "format": """
        Configuraci√≥n: [√Årea de customizing]
        ===================================
        
        Prop√≥sito: [Para qu√© se configura]
        
        Path SPRO: [Ruta en customizing]
        
        Pasos de configuraci√≥n:
        1. Paso 1
        2. Paso 2
        
        Tablas de customizing:
        - TABLA1: Qu√© configura
        
        Consideraciones:
        - Consideraci√≥n 1
        
        Impacto:
        - En proceso X
        - En transacci√≥n Y
        """
    },
    
    "üíª PROGRAMS_REPORTS": {
        "description": "Programas ABAP y reportes",
        "examples": [
            "SAPLIS-U1 - Facturaci√≥n masiva",
            "RFKKEDR1 - Extracto de cuenta",
            "RFBU0001 - Lista de BP",
            "Programas Z customizados",
            "Reportes de an√°lisis",
            "Jobs de background"
        ],
        "scope": "CLIENT_SPECIFIC",
        "format": """
        Programa: [NOMBRE] - [Descripci√≥n]
        =================================
        
        Tipo: [Report/Function/Class]
        Prop√≥sito: [Para qu√© sirve]
        
        Par√°metros principales:
        - PARAM1: Descripci√≥n
        
        Funcionalidad:
        1. Funci√≥n 1
        2. Funci√≥n 2
        
        Consideraciones:
        - Performance
        - Autorizaciones
        
        Scheduling:
        - Frecuencia recomendada
        - Variantes √∫tiles
        """
    },
    
    "üìã FUNCTIONAL_SPECS": {
        "description": "Especificaciones funcionales",
        "examples": [
            "Spec para desarrollo Z",
            "Requirement de interfaz",
            "Especificaci√≥n de reporte",
            "Documentos de dise√±o",
            "User stories",
            "Test cases"
        ],
        "scope": "CLIENT_SPECIFIC",
        "format": """
        Especificaci√≥n: [T√çTULO]
        ========================
        
        Objetivo: [Meta funcional]
        
        Requirements:
        1. Requirement 1
        2. Requirement 2
        
        Dise√±o:
        - Approach t√©cnico
        
        Test scenarios:
        1. Scenario 1
        2. Scenario 2
        
        Dependencies:
        - Dependencia 1
        """
    },
    
    "üéì TRAINING_MATERIALS": {
        "description": "Material de capacitaci√≥n",
        "examples": [
            "Gu√≠as de usuario para T-codes",
            "Procedimientos operativos",
            "Manuales de procesos",
            "Casos de uso t√≠picos",
            "Best practices",
            "Tips y trucos"
        ],
        "scope": "CLIENT_SPECIFIC",
        "format": """
        Gu√≠a: [T√çTULO]
        ==============
        
        Audiencia: [Usuario final/T√©cnico/Funcional]
        
        Objetivos de aprendizaje:
        1. Objetivo 1
        2. Objetivo 2
        
        Procedimiento:
        1. Paso 1 [Screenshot opcional]
        2. Paso 2
        
        Ejercicios pr√°cticos:
        - Ejercicio 1
        
        Referencias:
        - Documento relacionado
        """
    }
}

# ====================================================================
# COMANDOS PARA ALIMENTAR POR CATEGOR√çA
# ====================================================================

def get_feeding_examples():
    """Ejemplos de c√≥mo alimentar cada categor√≠a"""
    
    examples = {
        "frontend_web": """
        1. Acceder a http://localhost
        2. Modo "A√±adir" üìù
        3. Seleccionar tenant y scope
        4. Arrastrar archivo o pegar texto
        5. Sistema extrae metadatos autom√°ticamente
        6. Procesar para ingesta
        """,
        
        "api_direct": """
        curl -X POST "http://localhost:8000/api/v1/ingest/text" \\
             -H "Authorization: Bearer $TOKEN" \\
             -H "Content-Type: application/json" \\
             -d '{
               "tenant_slug": "STANDARD",
               "scope": "STANDARD",
               "text": "Documentaci√≥n de tabla BUT000...",
               "metadata": {
                 "system": "IS-U",
                 "topic": "master-data",
                 "tables": ["BUT000"],
                 "tcodes": ["BP"]
               }
             }'
        """,
        
        "batch_script": """
        # Usar scripts/feed_knowledge.py
        python scripts/feed_knowledge.py
        
        # O alimentar desde directorio
        python -c "
        from scripts.feed_knowledge import KnowledgeFeeder
        feeder = KnowledgeFeeder()
        feeder.authenticate()
        feeder.feed_from_files('/path/to/knowledge/docs')
        "
        """,
        
        "file_organization": """
        knowledge/
        ‚îú‚îÄ‚îÄ tables/
        ‚îÇ   ‚îú‚îÄ‚îÄ BUT000_business_partner.md
        ‚îÇ   ‚îú‚îÄ‚îÄ EVER_installations.md
        ‚îÇ   ‚îî‚îÄ‚îÄ EABL_billing_docs.md
        ‚îú‚îÄ‚îÄ processes/
        ‚îÇ   ‚îú‚îÄ‚îÄ move_in_process.md
        ‚îÇ   ‚îú‚îÄ‚îÄ billing_process.md
        ‚îÇ   ‚îî‚îÄ‚îÄ reading_process.md
        ‚îú‚îÄ‚îÄ incidents/
        ‚îÇ   ‚îú‚îÄ‚îÄ bp_errors.json
        ‚îÇ   ‚îú‚îÄ‚îÄ billing_issues.md
        ‚îÇ   ‚îî‚îÄ‚îÄ device_problems.md
        ‚îî‚îÄ‚îÄ config/
            ‚îú‚îÄ‚îÄ customizing_guide.md
            ‚îî‚îÄ‚îÄ authorization_setup.md
        """
    }
    
    return examples

print("üìö Estructura de conocimiento definida exitosamente!")
print("\nCategor√≠as disponibles:")
for category, info in knowledge_structure.items():
    print(f"  {category}: {info['description']}")

print(f"\nüéØ Total de categor√≠as: {len(knowledge_structure)}")
print("üìñ Ver examples con: get_feeding_examples()")
